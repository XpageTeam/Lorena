{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/ts/app.ts","webpack:///./node_modules/ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/dom7/dist/dom7.modular.js","webpack:///./node_modules/swiper/dist/js/swiper.esm.js","webpack:///./src/ts/main-reviews.ts","webpack:///./src/ts/tovar.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","App","domReady","callback","document","addEventListener","e","Error","getElements","selector","elements","querySelectorAll","length","getElement","querySelector","elementsGetter","transformNodeListToArray","list","Array","slice","wrap","wrapper","localWrapper","createElement","HTMLElement","each","el","innerHTML","outerHTML","parentNode","replaceChild","_i","elements_1","console","error","Element","this","_length","els","NodeList","_els","is","element","has","searchElements","isFinded","_a","_b","searchElements_1","target","contains","addClass","className","classList","add","removeClass","remove","toggleClass","hasClass","targetClass","find","searchingElements","findedElements","el_1","push","EventListener","_super","__extends","event","options","trigger","evt","createEvent","initEvent","dispatchEvent","mobileMenu","settings","_state","_error","menuActiveClass","bodyActiveClass","body","_settings","burger","menu","bindEvents","text","newState","_menu","_burger","openMenu","window","matchMedia","media","matches","fixBody","style","top","pageYOffset","position","state","closeMenu","Math","abs","parseInt","scrollTo","toggleMenu","_this","MobileMenu","doc","removeEventListener","activeElement","blur","nodeName","getElementById","children","childNodes","setAttribute","getElementsByTagName","location","hash","win","navigator","userAgent","history","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","Dom7","[object Object]","arr","self","$","context","tempParent","html","trim","indexOf","toCreate","match","split","nodeType","unique","uniqueArray","fn","Class","__webpack_exports__","swiper_esm_Swiper","virtual","keyboard","mousewheel","navigation","pagination","swiper_esm_scrollbar","parallax","swiper_esm_zoom","lazy","controller","a11y$1","swiper_esm_history","hashNavigation","autoplay","effectFade","effectCube","effectFlip","effectCoverflow","thumbs","Methods","classes","j","toggle","attr","attrs","arguments","getAttribute","attrName","removeAttr","removeAttribute","data","dom7ElementDataStorage","dataKey","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","on","args","eventType","targetSelector","listener","capture","handleLiveEvent","eventData","dom7EventData","unshift","apply","parents","k","handleEvent","undefined","events","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","handler","splice","dom7proxy","detail","bubbles","cancelable","filter","dataIndex","transitionEnd","dom","fireCallBack","outerWidth","includeMargins","styles","offsetWidth","parseFloat","outerHeight","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","left","css","props","prop","textContent","compareWith","webkitMatchesSelector","msMatchesSelector","index","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","parent","closest","foundElements","found","removeChild","toAdd","keys","forEach","methodName","Utils","obj","nextTick","delay","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","a","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","url","query","params","param","urlToParse","href","paramsPart","decodeURIComponent","isObject","constructor","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","extend","swiper_esm_Support","testDiv","touch","Modernizr","maxTouchPoints","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","observer","passiveListener","supportsPassive","opts","gestures","swiper_esm_Browser","isIE","isEdge","isSafari","ua","toLowerCase","isUiWebView","test","SwiperClass","eventsListeners","eventName","priority","method","onceHandler","f7proxy","eventHandler","isArray","instanceParams","instance","moduleName","modulesParams","moduleParams","modulePropName","moduleProp","moduleEventName","components","use","proto","static","install","installModule","update","updateSize","swiper","width","height","$el","clientWidth","clientHeight","isHorizontal","isVertical","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","floor","ceil","slidesPerView","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","paddingTop","paddingBottom","swiperSlideSize","centeredSlides","slidesPerGroup","newSlidesGrid","effect","setWrapperSize","slidesGridItem","centerInsufficientSlides","allSlidesSize","slideSizeValue","allSlidesOffset","snap","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","loop","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","swiper_esm_translate","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","newProgress","x","y","previousTranslate","swiper_esm_transition","transitionStart","runCallbacks","direction","autoHeight","dir","animating","swiper_esm_slide","slideTo","internal","slideIndex","preventInteractionOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevSnap","prevIndex","slideReset","slideToClosest","currentSnap","slidesPerViewDynamic","slideToIndex","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","diff","loopDestroy","grabCursor","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","manipulation","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","swiper_esm_Device","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onResize","breakpoints","setBreakpoint","freeMode","newTranslate","min","defaults","init","touchEventsTarget","edgeSwipeDetection","edgeSwipeThreshold","freeModeMomentum","freeModeMomentumRatio","freeModeMomentumBounce","freeModeMomentumBounceRatio","freeModeMomentumVelocityRatio","freeModeSticky","freeModeMinimumVelocity","breakpointsInverse","touchRatio","touchAngle","shortSwipes","longSwipes","longSwipesRatio","longSwipesMs","followFinger","allowTouchMove","threshold","touchMoveStopPropagation","touchStartPreventDefault","touchStartForcePreventDefault","touchReleaseOnEdges","uniqueNavElements","resistance","resistanceRatio","preventClicks","preventClicksPropagation","preloadImages","updateOnImagesReady","swipeHandler","noSwiping","noSwipingClass","noSwipingSelector","passiveListeners","containerModifierClass","wrapperClass","runCallbacksOnInit","prototypes","attachEvents","touchEvents","wrapperEl","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","type","which","button","isTouched","isMoved","allowClick","currentX","targetTouches","pageX","currentY","pageY","startX","startY","iOSEdgeSwipeDetection","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","allowThresholdMove","preventDefault","formElements","shouldPreventDefault","onTouchMove","preventedByNestedSwiper","diffX","diffY","sqrt","atan2","PI","nested","stopPropagation","startTranslate","allowMomentumBounce","disableParentSwiper","velocities","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","currentPos","lastMoveEvent","pop","velocityEvent","distance","velocity","momentumDuration","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","needsLoopFix","once","stopIndex","groupSize","ratio","onClick","stopImmediatePropagation","start","passive","move","end","detachEvents","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","directionChanged","needsReLoop","changeDirection","points","point","sort","b","innerWidth","wasLocked","addClasses","classNames","suffixes","suffix","removeClasses","images","loadImage","imageEl","src","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","imagesLoaded","imagesToLoad","currentSrc","extendedDefaults","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","useModules","spv","breakLoop","translateValue","translated","newDirection","needUpdate","currentDirection","slideEl","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","observeSlideChildren","disconnect","Observer$1","destroy","Virtual","force","addSlidesBefore","addSlidesAfter","from","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","onRendered","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","numberOfNewSlides","newCache","cachedIndex","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","returnValue","handle","enable","disable","Mousewheel","lastScrollTime","isSupported","implementation","hasFeature","isEventSupported","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplayDisableOnInteraction","stop","getTime","eventsTarged","handleMouseEnter","handleMouseLeave","Navigation","$nextEl","$prevEl","disabledClass","lockClass","nextEl","prevEl","onNextClick","onPrevClick","hideOnClick","hiddenClass","isHidden","Pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","number","render","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","pointerPosition","positionRatio","clientX","clientY","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Parallax","currentOpacity","currentScale","setTransform","parallaxEl","$parallaxEl","parallaxDuration","Zoom","x1","y1","x2","y2","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","scaleMove","minRatio","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","onGestureStart","onGestureChange","onGestureEnd","onTransitionEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","loadOnTransitionStart","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","spline","controlled","control","multiplier","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","click","message","notification","liveRegion","bulletEl","$bulletEl","paginationBulletMessage","onEnterKey","notificationClass","updateNavigation","updatePagination","History","pushState","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","slugify","includes","currentState","setHistory","HashNavigation","newHash","watchState","onHashCange","setHash","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","running","run","paused","waitForTransition","disableOnInteraction","pause","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","slideAngle","round","tz","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","Flip","flipEffect","limitRotation","rotateY","rotateX","zIndex","Coverflow","coverflowEffect","center","rotate","depth","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","perspectiveOrigin","Thumbs","thumbsParams","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","initial","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","swiper_esm_js_1","Swiper","EffectFade","app_1","swiper_esm_1","EffectCube","id","targetBlock","initiallizeVariantsSlider","slider","thisSlider","bindNav","plates"],"mappings":"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","file":"js/common.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","class App {\r\n\t// private document: any = document;\r\n\r\n\tpublic static domReady(callback: any): void {\r\n\t\ttry{\r\n\t\t\tdocument.addEventListener(\"DOMContentLoaded\", callback)\r\n\t\t}catch(e){\r\n\t\t\tthrow Error(e)\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static getElements(selector: string): NodeList{\r\n\t\tconst elements: any = document.querySelectorAll(selector);\r\n\r\n\t\treturn elements.length ? elements : []\r\n\t\t// return this.elementsGetter(sele ctor)\r\n\t}\r\n\r\n\t/**\r\n\t* Метод получения одно объекта по селектору\r\n\t* @param selector: string\r\n\t* @return HTMLElement\r\n\t*/\r\n\tpublic static getElement(selector: string): HTMLElement{\r\n\t\tconst element: any = document.querySelector(selector);\r\n\r\n\t\treturn element\r\n\t}\r\n\r\n\tpublic static elementsGetter(selector: string): HTMLElement[]{\r\n\t\treturn App.transformNodeListToArray(document.querySelectorAll(selector))\r\n\t}\r\n\r\n\tpublic static transformNodeListToArray(list: NodeList): HTMLElement[]{\r\n\t\ttry{\r\n\t\t\treturn Array.prototype.slice.call(list)\r\n\t\t}catch(e){\r\n\t\t\tthrow Error(e)\r\n\t\t\treturn []\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static wrap(selector: any, wrapper: HTMLElement): void\r\n\tpublic static wrap(selector: any, wrapper: string): void\r\n\tpublic static wrap(selector: any, wrapper: any): void{\r\n\t\tlet localWrapper: HTMLElement;\r\n\r\n\t\tif (typeof wrapper == \"string\")\r\n\t\t\tlocalWrapper = document.createElement(wrapper)\r\n\t\telse if (wrapper instanceof HTMLElement)\r\n\t\t\tlocalWrapper = wrapper\r\n\r\n\t\t// console.log(selector, [localWrapper])\r\n\r\n\t\tApp.each(selector, function(el: HTMLElement, i:number){\r\n\t\t\tlocalWrapper.innerHTML = el.outerHTML\r\n\r\n\t\t\tel.parentNode.replaceChild(localWrapper, el)\r\n\t\t})\r\n\t}\r\n\r\n\tpublic static each(elements: string, callback: any): void\r\n\tpublic static each(elements: HTMLElement[], callback: any): void\r\n\tpublic static each(elements: NodeList, callback: any): void\r\n\tpublic static each(elements: any, callback: any): void{\r\n\r\n\t\tif (!callback){\r\n\t\t\tconsole.error(\"Callback does not exists in yours 'each'\")\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (typeof elements == \"string\")\r\n\t\t\telements = App.transformNodeListToArray(App.getElements(elements))\r\n\r\n\t\tlet i = 0;\r\n\r\n\t\tfor (let el of elements){\r\n\t\t\tcallback(el, i)\r\n\t\t\ti++\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass Element {\r\n\t// private _selector: string\r\n\tprotected _els: HTMLElement[]\r\n\tpublic _length: number = 0\r\n\r\n\tset els(elements: HTMLElement[]){\r\n\t\tthis._els = elements\r\n\r\n\t\tthis._length = elements.length || 0\r\n\t}\r\n\r\n\tget els(){\r\n\t\treturn this._els\r\n\t}\r\n\r\n\tget length(){\r\n\t\treturn this._length\r\n\t}\r\n\r\n\t/**\r\n\t* Создание коллекции элементов\r\n\t* @param selector: HTMLElement[] || NodeList || HTMLElement || Element || string\r\n\t* @return Element\r\n\t*/  \r\n\tconstructor (selector: HTMLElement[])\r\n\tconstructor (selector: NodeList)\r\n\tconstructor (selector: Element)\r\n\tconstructor (selector: HTMLElement)\r\n\tconstructor (selector: string)\r\n\tconstructor (selector: any){\r\n\r\n\r\n\t\tif (typeof selector == \"string\")\r\n\t\t\tthis.els = App.elementsGetter(selector)\r\n\t\telse if (selector instanceof HTMLElement)\r\n\t\t\tthis.els = [selector]\r\n\t\telse if (selector instanceof NodeList)\r\n\t\t\tthis.els = App.transformNodeListToArray(selector)\r\n\t\telse if (selector instanceof Array && (selector[0] instanceof HTMLElement || !selector.length))\r\n\t\t\tthis.els = selector\r\n\t\telse if (selector instanceof Element)\r\n\t\t\tthis.els = selector.els\r\n\t\telse\r\n\t\t\tthrow Error(`Invalid selector: ${selector}`)\r\n\t}\r\n\r\n\r\n\t/** \r\n\t* Метод сравнения элементов\r\n\t* @param selector: HTMLElement || string\r\n\t* @return boolean\r\n\t*/\r\n\tpublic is(selector: HTMLElement): boolean\r\n\tpublic is(selector: string): boolean\r\n\tpublic is(selector: any): boolean{\r\n\t\tlet element: HTMLElement[];\r\n\r\n\t\tif (typeof selector == \"string\")\r\n\t\t\telement = App.elementsGetter(selector)\r\n\t\telse if (selector instanceof HTMLElement)\r\n\t\t\telement = [selector]\r\n\r\n\t\treturn this.els[0] == element[0]\r\n\t}\r\n\r\n\t/** Метод проверки содержания текущими элементами передаваемых\r\n\t* @param selector: Element || HTMLElement || HTMLElement[] || NodeList || string\r\n\t* @return boolean\r\n\t*/\r\n\tpublic has(selector: Element): boolean\r\n\tpublic has(selector: HTMLElement): boolean\r\n\tpublic has(selector: HTMLElement[]): boolean\r\n\tpublic has(selector: NodeList): boolean\r\n\tpublic has(selector: string): boolean\r\n\tpublic has(selector: any): boolean{\r\n\t\tlet searchElements: HTMLElement[];\r\n\r\n\t\tif (typeof selector == \"string\")\r\n\t\t\tsearchElements = App.elementsGetter(selector)\r\n\t\telse if (selector instanceof HTMLElement)\r\n\t\t\tsearchElements = [selector]\r\n\t\telse if (selector instanceof Element)\r\n\t\t\tsearchElements = selector._els\r\n\t\telse if (selector instanceof NodeList)\r\n\t\t\tsearchElements = App.transformNodeListToArray(selector)\r\n\t\telse if (selector instanceof Array && (selector[0] instanceof HTMLElement || !selector.length))\r\n\t\t\tsearchElements = selector\r\n\t\telse\r\n\t\t\tthrow Error(`Invalid selector: ${selector}`)\r\n\r\n\t\tlet isFinded: boolean = false;\r\n\r\n\t\tfor (let el of this.els){\r\n\r\n\t\t\tfor (let target of searchElements)\r\n\t\t\t\tif (el.contains(target)){\r\n\t\t\t\t\tisFinded = true\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\r\n\t\t\tif (isFinded)\r\n\t\t\t\treturn true\r\n\t\t}\r\n\r\n\t\treturn false\r\n\t}\r\n\r\n\t/**\r\n\t* Назначить класс всем текущим элементам\r\n\t* @param className: string\r\n\t* @return Element\r\n\t*/\r\n\tpublic addClass(className: string): Element{\r\n\t\tApp.each(this.els, (el: HTMLElement) => {\r\n\t\t\tel.classList.add(className)\r\n\t\t})\r\n\t\treturn this\r\n\t}\r\n\r\n\t/**\r\n\t* Удалить класс у всех текущих элементов\r\n\t* @param className: string\r\n\t* @return Element\r\n\t*/\r\n\tpublic removeClass(className: string): Element{\r\n\t\tApp.each(this.els, (el: HTMLElement) => {\r\n\t\t\tel.classList.remove(className)\r\n\t\t})\r\n\t\treturn this\r\n\t}\r\n\r\n\t/**\r\n\t* Переключения класса у всех текущих элементов\r\n\t* @param className: string\r\n\t* @return Element\r\n\t*/\r\n\tpublic toggleClass(className: string, callback: Function = () => {}): Element{\r\n\t\tApp.each(this.els, (el: HTMLElement) => {\r\n\t\t\tif (el.classList.contains(className)){\r\n\t\t\t\tel.classList.remove(className)\r\n\r\n\t\t\t\tcallback(false)\r\n\t\t\t}else{\r\n\t\t\t\tel.classList.add(className)\r\n\t\t\t\tcallback(true)\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn this\r\n\t}\r\n\r\n\tpublic hasClass(targetClass: string): boolean{\r\n\t\tfor (const el of this.els)\r\n\t\t\tif (el.classList.contains(targetClass))\r\n\t\t\t\treturn true\r\n\r\n\t\treturn false\r\n\t}\r\n\r\n\tpublic find(selector: string): Element{\r\n\t\tlet searchingElements = new Array();\r\n\r\n\t\tApp.each(this.els, (el: HTMLElement) => {\r\n\t\t\tconst findedElements: NodeList = el.querySelectorAll(selector);\r\n\r\n\t\t\tif (!findedElements.length)\r\n\t\t\t\treturn\r\n\r\n\t\t\tfor (const el of App.transformNodeListToArray(findedElements))\r\n\t\t\t\tsearchingElements.push(el)\r\n\r\n\t\t\t// searchingElements.concat(App.transformNodeListToArray(findedElements))\r\n\r\n\t\t\t// console.log(searchingElements instanceof Array, App.transformNodeListToArray(findedElements) instanceof Array)\r\n\t\t})\r\n\r\n\t\treturn new Element(searchingElements)\r\n\t}\r\n}\r\n\r\ninterface EventOtions{\r\n\tcapture?: boolean,\r\n\tonce?: boolean,\r\n\tpassive?: boolean\r\n}\r\n\r\nclass EventListener extends Element{\r\n\r\n\t/** \r\n\t* Метод для подписки на событие\r\n\t* @param event: string - название js события\r\n\t* @param callback: function\r\n\t* @param options: object\r\n\t* @retrun EventListener\r\n\t*/\r\n\tpublic add(event: string, callback: any, options?: EventOtions): EventListener{\r\n\r\n\t\tApp.each(this.els, function(el:HTMLElement, i: number){\r\n\t\t\tel.addEventListener(event, function(event){\r\n\t\t\t\tcallback(this, event, i)\r\n\t\t\t}, options)\r\n\t\t})\r\n\r\n\t\treturn this\r\n\t}\r\n\r\n\t/** \r\n\t* Метод для вызова события\r\n\t* @param event: string - название js события\r\n\t* @retrun EventListener\r\n\t*/\r\n\tpublic trigger(event: string): EventListener{\r\n\t\tApp.each(this.els, function(el: HTMLElement){\r\n\t\t\tlet evt: Event = document.createEvent(\"HTMLEvents\");\r\n\r\n\t\t\tevt.initEvent(event, false, true)\r\n\t\t\tel.dispatchEvent(evt)\r\n\t\t})\r\n\r\n\t\treturn this\r\n\t}\r\n}\r\n\r\ninterface mobileMenuSettings {\r\n\tburger: string,\r\n\tmenu: string,\r\n\tmenuActiveClass: string,\r\n\tbodyActiveClass: string,\r\n\tignoreWarnings: boolean,\r\n\tfixBody: boolean,\r\n\tmedia?: string,\r\n}\r\n\r\nclass mobileMenu{\r\n\tprivate _settings: mobileMenuSettings\r\n\tprivate _burger: HTMLElement\r\n\tprivate _menu: HTMLElement\r\n\tprivate _state: boolean = false\r\n\tprivate _error: boolean = false\r\n\tprivate menuActiveClass: string = \"js__opened\"\r\n\tprivate bodyActiveClass: string = \"js__menu-opened\"\r\n\tprivate body: HTMLElement = App.getElement(\"body\")\r\n\r\n\tset error(text: string){\r\n\t\tthis._error = true\r\n\r\n\t\tconsole.error(`${text}. Меню не работает`)\r\n\t}\r\n\r\n\tset state(newState: boolean){\r\n\t\tthis._state = newState\r\n\t}\r\n\r\n\r\n\tset menu (el: HTMLElement){\r\n\t\tif (!(el instanceof HTMLElement))\r\n\t\t\tthis.error = \"Меню не найдено\"\r\n\t\telse\r\n\t\t\tthis._menu = el\r\n\t}\r\n\r\n\tset burger(el: HTMLElement){\r\n\t\tif (!(el instanceof HTMLElement))\r\n\t\t\tthis.error = \"Бургер не найден\"\r\n\t\telse\r\n\t\t\tthis._burger = el\r\n\t}\r\n\r\n\tget burger(){\r\n\t\treturn this._burger\r\n\t}\r\n\r\n\tget menu(){\r\n\t\treturn this._menu\r\n\t}\r\n\r\n\tget settings(){\r\n\t\treturn this._settings\r\n\t}\r\n\r\n\tget state(){\r\n\t\treturn this._state\r\n\t}\r\n\r\n\tconstructor(settings: mobileMenuSettings){\r\n\t\tthis._settings = settings\r\n\t\tthis.burger = App.getElement(settings.burger)\r\n\r\n\t\tthis.menu = App.getElement(settings.menu)\r\n\r\n\t\tthis.bindEvents()\r\n\t}\r\n\r\n\tpublic openMenu(): mobileMenu{\r\n\t\tif (!window.matchMedia(this.settings.media).matches)\r\n\t\t\treturn\r\n\r\n\t\tif (this.settings.fixBody){\r\n\t\t\tthis.body.style.top = -window.pageYOffset + \"px\";\r\n\t\t\tthis.body.style.position = \"fixed\";\r\n\t\t}\r\n\r\n\t\tthis.burger.classList.add(\"js__active\")\r\n\t\tthis.menu.classList.add(this.menuActiveClass)\r\n\t\tthis.body.classList.add(this.bodyActiveClass)\r\n\r\n\t\tthis.state = true\r\n\r\n\t\treturn this\r\n\t}\r\n\r\n\tpublic closeMenu(): mobileMenu{\r\n\t\tif (!window.matchMedia(this.settings.media).matches || !this.state)\r\n\t\t\treturn\r\n\r\n\t\tlet top: number = 0;\r\n\r\n\t\tif (this.settings.fixBody){\r\n\t\t\ttop = Math.abs(parseInt(this.body.style.top))\r\n\r\n\t\t\tthis.body.style.top = \"\"\r\n\t\t\tthis.body.style.position = \"\"\r\n\t\t}\r\n\r\n\t\tthis.burger.classList.remove(\"js__active\")\r\n\t\tthis.menu.classList.remove(this.menuActiveClass)\r\n\t\tthis.body.classList.remove(this.bodyActiveClass)\r\n\r\n\t\tif (this.settings.fixBody)\r\n\t\t\twindow.scrollTo(0, top)\r\n\r\n\t\tthis.state = false\r\n\r\n\t\treturn this\r\n\t}\r\n\r\n\tpublic toggleMenu(): mobileMenu{\r\n\t\tif (!window.matchMedia(this.settings.media).matches)\r\n\t\t\treturn\r\n\r\n\t\tif (this.state)\r\n\t\t\tthis.closeMenu()\r\n\t\telse\r\n\t\t\tthis.openMenu()\r\n\r\n\t\treturn this\r\n\t}\r\n\r\n\tprivate bindEvents(){\r\n\t\tdocument.addEventListener(\"click\", (event: any) => {\r\n\t\t\tconst target: Element = new Element(event.target);\r\n\t\t\t\r\n\t\t\tif(!target.is(this.burger)\r\n\t\t\t\t&& !new Element(this.burger).has(target)\r\n\t\t\t\t&& !target.is(this.menu)\r\n\t\t\t\t&& !new Element(this.menu).has(target))\r\n\t\t\t\tthis.closeMenu()\r\n\t\t})\r\n\r\n\t\tnew EventListener(this.burger).add(\"click\", (el: HTMLElement) => {\r\n\t\t\tthis.toggleMenu()\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport {App, EventListener, mobileMenu as MobileMenu, Element}","/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n","/**\n * Dom7 2.1.3\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2019, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: February 11, 2019\n */\nimport { document, window } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function onceHandler(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, onceHandler, capture);\n    if (onceHandler.dom7proxy) {\n      delete onceHandler.dom7proxy;\n    }\n  }\n  onceHandler.dom7proxy = listener;\n  return dom.on(eventName, targetSelector, onceHandler, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n// eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n","/**\n * Swiper 4.5.0\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2019 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: February 22, 2019\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition as transition$1, on, off, trigger, transitionEnd as transitionEnd$1, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition: transition$1,\n  on,\n  off,\n  trigger,\n  transitionEnd: transitionEnd$1,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter(paramsPart => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = document.createElement('div');\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!((window.navigator.maxTouchPoints > 0) || ('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(window.navigator.pointerEnabled || window.PointerEvent || ('maxTouchPoints' in window.navigator && window.navigator.maxTouchPoints > 0)),\n    prefixedPointerEvents: !!window.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (window.Modernizr && window.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles.length; i += 1) {\n        if (styles[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!window.navigator.userAgent.match(/Trident/g) || !!window.navigator.userAgent.match(/MSIE/g),\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n      if (onceHandler.f7proxy) {\n        delete onceHandler.f7proxy;\n      }\n    }\n    onceHandler.f7proxy = handler;\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || (eventHandler.f7proxy && eventHandler.f7proxy === handler)) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(m => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          const width = parseFloat(slideStyles.getPropertyValue('width'));\n          const paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n          const paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n          const marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n          const marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n          }\n        } else {\n          const height = parseFloat(slideStyles.getPropertyValue('height'));\n          const paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n          const paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n          const marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n          const marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = height + marginTop + marginBottom;\n          } else {\n            slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n          }\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index = swiper.activeIndex + i;\n      if (index > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                || (slideAfter > 0 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  swiper.emit('slideChange');\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition = {\n  setTransition,\n  transitionStart,\n  transitionEnd,\n};\n\nfunction slideTo (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map(val => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const snapIndex = Math.floor(index / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index, el) => {\n    const slide = $(el);\n    if (index < swiper.loopedSlides) appendSlides.push(el);\n    if (index < slides.length && index >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: window.cordova || window.phonegap,\n    phonegap: window.cordova || window.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi = !device.webView\n      && (ipod || iphone)\n      && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n      && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data.isTouchEvent = e.type === 'touchstart';\n  if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data.formElements)) preventDefault = false;\n    if (\n      document.activeElement\n      && $(document.activeElement).is(data.formElements)\n      && document.activeElement !== e.target\n    ) {\n      document.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data.formElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data.currentTranslate = diff + data.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime,\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) > 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      data.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach((param) => {\n        const paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n\n    Utils.extend(swiper.params, breakpointParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  const swiper = this;\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (swiper.params.breakpointsInverse) {\n      if (point <= window.innerWidth) {\n        breakpoint = point;\n      }\n    } else if (point >= window.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push('initialized');\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsInverse: false,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\n/* eslint no-param-reassign: \"off\" */\n\nconst prototypes = {\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if ((newDirection === currentDirection) || (newDirection !== 'horizontal' && newDirection !== 'vertical')) {\n      return swiper;\n    }\n\n    if (currentDirection === 'vertical') {\n      swiper.$el\n        .removeClass(`${swiper.params.containerModifierClass}vertical wp8-vertical`)\n        .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n      if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n      }\n    }\n    if (currentDirection === 'horizontal') {\n      swiper.$el\n        .removeClass(`${swiper.params.containerModifierClass}horizontal wp8-horizontal`)\n        .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n      if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n      }\n    }\n\n    swiper.params.direction = newDirection;\n\n    swiper.slides.each((slideIndex, slideEl) => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n\n    return swiper;\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index], index));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach((index) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\n    onRendered();\n  },\n  renderSlide(slide, index) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n    if (params.cache) swiper.virtual.cache[index] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slides) {\n    const swiper = this;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    swiper.virtual.update(true);\n  },\n  prependSlide(slides) {\n    const swiper = this;\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  },\n  removeSlide(slidesIndexes) {\n    const swiper = this;\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(activeIndex, 0);\n  },\n  removeAllSlides() {\n    const swiper = this;\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(0, 0);\n  },\n};\n\nvar virtual = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        removeSlide: Virtual.removeSlide.bind(swiper),\n        removeAllSlides: Virtual.removeAllSlides.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      if (!swiper.params.initialSlide) {\n        swiper.virtual.update();\n      }\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if ((kc === 39 && !rtl) || (kc === 37 && rtl)) swiper.slideNext();\n      if ((kc === 37 && !rtl) || (kc === 39 && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 40) swiper.slideNext();\n      if (kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar keyboard = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document.implementation\n    && document.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = data.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = data.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      if (swiper.params.loop) {\n        swiper.loopFix();\n      }\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar mousewheel = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  onPrevClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  },\n  onNextClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', swiper.navigation.onNextClick);\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', swiper.navigation.onPrevClick);\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', swiper.navigation.onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', swiper.navigation.onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar navigation = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n        onNextClick: Navigation.onNextClick.bind(swiper),\n        onPrevClick: Navigation.onPrevClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        let isHidden;\n        if ($nextEl) {\n          isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n        } else if ($prevEl) {\n          isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n        }\n        if (isHidden === true) {\n          swiper.emit('navigationShow', swiper);\n        } else {\n          swiper.emit('navigationHide', swiper);\n        }\n        if ($nextEl) {\n          $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n        if ($prevEl) {\n          $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index += swiper.loopedSlides;\n        swiper.slideTo(index);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar pagination = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        const isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n        if (isHidden === true) {\n          swiper.emit('paginationShow', swiper);\n        } else {\n          swiper.emit('paginationHide', swiper);\n        }\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const { $el, dragSize, trackSize } = scrollbar;\n\n    let pointerPosition;\n    if (swiper.isHorizontal()) {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    } else {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n    }\n    let positionRatio;\n    positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar scrollbar = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each((index, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar parallax = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar zoom = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n\n    let scale = 1;\n    Object.defineProperty(swiper.zoom, 'scale', {\n      get() {\n        return scale;\n      },\n      set(value) {\n        if (scale !== value) {\n          const imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n          const slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n          swiper.emit('zoomChange', value, imageEl, slideEl);\n        }\n        scale = value;\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index}\"]`)\n      : swiper.slides.eq(index);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar lazy = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar controller = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar a11y$1 = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text) {\n    return text.toString()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar history = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar hashNavigation = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar autoplay = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset = $slideEl[0].swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar effectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar effectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar effectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar effectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = currentThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n      } else {\n        newThumbsIndex = swiper.realIndex;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar thumbs = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      swiper: null,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  \n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport { Swiper, virtual as Virtual, keyboard as Keyboard, mousewheel as Mousewheel, navigation as Navigation, pagination as Pagination, scrollbar as Scrollbar, parallax as Parallax, zoom as Zoom, lazy as Lazy, controller as Controller, a11y$1 as A11y, history as History, hashNavigation as HashNavigation, autoplay as Autoplay, effectFade as EffectFade, effectCube as EffectCube, effectFlip as EffectFlip, effectCoverflow as EffectCoverflow, thumbs as Thumbs };\n","import {Swiper, Lazy, EffectFade, Navigation} from 'swiper/dist/js/swiper.esm.js'\r\nimport {App} from \"./app\"\r\n\r\nSwiper.use([Lazy, EffectFade, Navigation])\r\n\r\nApp.domReady(() => {\r\n\tApp.each(\".reviews-slider\", function(el: HTMLElement){\r\n\t\tconst prevEl: HTMLElement = el.querySelector(\".swiper-button-prev\"),\r\n\t\t\tnextEl: HTMLElement = el.querySelector(\".swiper-button-next\");\r\n\r\n\t\tnew Swiper(el, {\r\n\t\t\teffect: \"fade\",\r\n\t\t\tnavigation: {\r\n\t\t\t\tprevEl: prevEl,\r\n\t\t\t\tnextEl: nextEl\r\n\t\t\t},\r\n\t\t\tlazy: {\r\n\t\t\t\tloadPrevNext: true,\r\n\t\t\t\tloadPrevNextAmount: 3,\r\n\t\t\t\tloadOnTransitionStart: true\r\n\t\t\t},\r\n\t\t})\r\n\t})\r\n})","import {App, Element, EventListener} from \"./app\"\r\nimport \"./main-reviews\"\r\nimport {Swiper, Lazy, EffectFade, EffectCube, Keyboard} from \"swiper/dist/js/swiper.esm\"\r\n\r\nSwiper.use([Lazy, EffectFade, EffectCube, Keyboard])\r\n\r\nApp.domReady(() => {\r\n\tnew EventListener(\".tovar-tabs__tab\").add(\"click\", (el: HTMLElement, event: Event) => {\r\n\t\tconst id = el.getAttribute(\"href\").replace(\"#\", \"\");\r\n\r\n\t\tconst targetBlock = new Element(`#${id}`);\r\n\r\n\t\tnew Element(\".variants-list.active, .tovar-tabs__tab.active\").removeClass(\"active\")\r\n\r\n\t\tnew Element(el).addClass(\"active\")\r\n\r\n\t\ttargetBlock.addClass(\"active\")\r\n\r\n\t\tinitiallizeVariantsSlider(document.querySelector(\".variants-list.active .variants-slider:not(.swiper-container-initialized)\"))\r\n\r\n\t\tevent.preventDefault();\r\n\t})\r\n})\r\n\r\nApp.domReady(() => {\r\n\tconst mainSlider = new Swiper(\".tovar-sliders__big\", {\r\n\t\teffect: \"fade\",\r\n\t\tlazy: {\r\n\t\t\tloadPrevNext: true,\r\n\t\t},\r\n\t\tkeyboard: {\r\n\t\t\tenabled: true,\r\n\t\t\tonlyInViewport: true,\r\n\t\t}\r\n\t})\r\n\r\n\tinitiallizeVariantsSlider(document.querySelector(\".variants-list.active .variants-slider:not(.swiper-container-initialized)\"))\r\n})\r\n\r\nconst initiallizeVariantsSlider = (slider: HTMLElement) => {\r\n\tif (!slider)\r\n\t\treturn\r\n\r\n\tconst thisSlider = new Swiper(slider, {\r\n\t\teffect: \"cube\",\r\n\t\tcubeEffect: {\r\n\t\t    slideShadows: false,\r\n\t\t},\r\n\t\tlazy: {\r\n\t\t\tloadPrevNext: true,\r\n\t\t\tloadPrevNextAmount: 2\r\n\t\t},\r\n\t})\r\n\r\n\tbindNav(thisSlider, slider.closest(\".variants-list\"), )\r\n}, bindNav = (slider: Swiper, el: any) => {\r\n\tconst plates = new Element(el).find(\".variants-plates__one\");\r\n\r\n\tif (!plates.length)\r\n\t\treturn\r\n\r\n\tnew EventListener(plates).add(\"click\", (el: HTMLElement, event: any, i: number) => {\r\n\t\tplates.removeClass(\"active\")\r\n\t\tel.classList.add(\"active\")\r\n\t\tslider.slideTo(i)\r\n\t}) \r\n};"],"sourceRoot":""}