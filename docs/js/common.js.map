{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/dom7/dist/dom7.modular.js","webpack:///./src/ts/app.ts","webpack:///./node_modules/swiper/dist/js/swiper.esm.js","webpack:///./src/ts/main-reviews.ts","webpack:///./src/ts/common.ts","webpack:///./src/ts/tovar.ts","webpack:///./src/ts/timeline.ts","webpack:///./src/ts/standart-page.ts","webpack:///./node_modules/swiper/dist/js/swiper.esm.bundle.js","webpack:///./src/ts/useful.ts","webpack:///./src/ts/addresses.ts","webpack:///./src/ts/partners.ts","webpack:///./src/ts/career.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","win","doc","document","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","location","hash","window","navigator","userAgent","history","CustomEvent","this","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","$","addClass","removeClass","hasClass","toggleClass","attr","removeAttr","data","transform","transition","on","off","trigger","transitionEnd","outerWidth","outerHeight","offset","styles","css","each","html","text","is","index","eq","append","prepend","next","nextAll","prev","prevAll","parent","parents","closest","find","remove","add","ssr_window__WEBPACK_IMPORTED_MODULE_0__","Dom7","[object Object]","arr","self","length","selector","context","els","tempParent","trim","indexOf","toCreate","innerHTML","push","match","split","nodeType","unique","uniqueArray","className","classes","j","classList","contains","toggle","attrs","arguments","getAttribute","attrName","removeAttribute","el","dom7ElementDataStorage","dataKey","elStyle","webkitTransform","duration","webkitTransitionDuration","transitionDuration","args","eventType","targetSelector","listener","capture","handleLiveEvent","e","target","eventData","dom7EventData","unshift","apply","k","handleEvent","undefined","events","event","dom7LiveListeners","proxyListener","dom7Listeners","handlers","handler","splice","dom7proxy","evt","detail","bubbles","cancelable","filter","dataIndex","dispatchEvent","callback","dom","fireCallBack","includeMargins","offsetWidth","parseFloat","offsetHeight","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","props","prop","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","child","previousSibling","returnIndex","newChild","tempDiv","firstChild","appendChild","insertBefore","nextElementSibling","nextEls","previousElementSibling","prevEls","parentNode","foundElements","found","removeChild","toAdd","fn","Class","App","domReady","Error","getElements","elements","getElement","elementsGetter","transformNodeListToArray","list","Array","slice","wrap","wrapper","localWrapper","HTMLElement","outerHTML","replaceChild","_i","elements_1","console","error","Element","_length","NodeList","_els","addElement","element","concat","has","searchElements","isFinded","_a","_b","searchElements_1","targetClass","searchingElements","findedElements","el_1","EventListener","_super","__extends","options","mobileMenu","settings","_state","_error","menuActiveClass","bodyActiveClass","_settings","burger","menu","bindEvents","newState","_menu","_burger","openMenu","matchMedia","media","fixBody","pageYOffset","position","state","closeMenu","Math","abs","parseInt","scrollTo","toggleMenu","_this","MobileMenu","Swiper","virtual","keyboard","mousewheel","navigation","pagination","scrollbar","parallax","zoom","lazy","controller","a11y$1","hashNavigation","autoplay","effectFade","effectCube","effectFlip","effectCoverflow","thumbs","dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__","ssr_window__WEBPACK_IMPORTED_MODULE_1__","Methods","keys","forEach","methodName","Utils","obj","nextTick","delay","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","a","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","url","query","params","param","urlToParse","href","paramsPart","decodeURIComponent","isObject","constructor","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","extend","Support","testDiv","touch","Modernizr","maxTouchPoints","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","observer","passiveListener","supportsPassive","opts","gestures","Browser","isIE","isEdge","isSafari","ua","toLowerCase","isUiWebView","test","SwiperClass","eventsListeners","eventName","priority","method","onceHandler","f7proxy","eventHandler","isArray","instanceParams","instance","moduleName","modulesParams","moduleParams","modulePropName","moduleProp","moduleEventName","components","use","proto","static","install","installModule","update","updateSize","swiper","width","height","$el","clientWidth","clientHeight","isHorizontal","isVertical","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","floor","ceil","slidesPerView","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","paddingTop","paddingBottom","swiperSlideSize","centeredSlides","slidesPerGroup","newSlidesGrid","effect","setWrapperSize","slidesGridItem","centerInsufficientSlides","allSlidesSize","slideSizeValue","allSlidesOffset","snap","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","loop","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","newProgress","x","y","previousTranslate","transitionStart","runCallbacks","direction","autoHeight","dir","animating","slideTo","internal","slideIndex","preventInteractionOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevSnap","prevIndex","slideReset","slideToClosest","currentSnap","slidesPerViewDynamic","slideToIndex","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","diff","loopDestroy","grabCursor","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","manipulation","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","Device","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onResize","breakpoints","setBreakpoint","freeMode","newTranslate","min","defaults","init","touchEventsTarget","edgeSwipeDetection","edgeSwipeThreshold","freeModeMomentum","freeModeMomentumRatio","freeModeMomentumBounce","freeModeMomentumBounceRatio","freeModeMomentumVelocityRatio","freeModeSticky","freeModeMinimumVelocity","breakpointsInverse","touchRatio","touchAngle","shortSwipes","longSwipes","longSwipesRatio","longSwipesMs","followFinger","allowTouchMove","threshold","touchMoveStopPropagation","touchStartPreventDefault","touchStartForcePreventDefault","touchReleaseOnEdges","uniqueNavElements","resistance","resistanceRatio","preventClicks","preventClicksPropagation","preloadImages","updateOnImagesReady","swipeHandler","noSwiping","noSwipingClass","noSwipingSelector","passiveListeners","containerModifierClass","wrapperClass","runCallbacksOnInit","prototypes","attachEvents","touchEvents","wrapperEl","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","type","which","button","isTouched","isMoved","allowClick","currentX","targetTouches","pageX","currentY","pageY","startX","startY","iOSEdgeSwipeDetection","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","allowThresholdMove","preventDefault","formElements","shouldPreventDefault","onTouchMove","preventedByNestedSwiper","diffX","diffY","sqrt","atan2","PI","nested","stopPropagation","startTranslate","allowMomentumBounce","disableParentSwiper","velocities","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","currentPos","lastMoveEvent","pop","velocityEvent","distance","velocity","momentumDuration","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","needsLoopFix","once","stopIndex","groupSize","ratio","onClick","stopImmediatePropagation","start","passive","move","end","detachEvents","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","directionChanged","needsReLoop","changeDirection","points","point","sort","b","innerWidth","wasLocked","addClasses","classNames","suffixes","suffix","removeClasses","images","loadImage","imageEl","src","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","imagesLoaded","imagesToLoad","currentSrc","extendedDefaults","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","useModules","spv","breakLoop","translateValue","translated","newDirection","needUpdate","currentDirection","slideEl","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","observeSlideChildren","disconnect","Observer$1","destroy","Virtual","force","addSlidesBefore","addSlidesAfter","from","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","onRendered","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","numberOfNewSlides","newCache","cachedIndex","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","returnValue","handle","enable","disable","Mousewheel","lastScrollTime","isSupported","implementation","hasFeature","isEventSupported","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplayDisableOnInteraction","stop","getTime","eventsTarged","handleMouseEnter","handleMouseLeave","Navigation","$nextEl","$prevEl","disabledClass","lockClass","nextEl","prevEl","onNextClick","onPrevClick","hideOnClick","hiddenClass","isHidden","Pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","number","render","Scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","pointerPosition","positionRatio","clientX","clientY","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Parallax","currentOpacity","currentScale","setTransform","parallaxEl","$parallaxEl","parallaxDuration","Zoom","x1","y1","x2","y2","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","scaleMove","minRatio","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","onGestureStart","onGestureChange","onGestureEnd","onTransitionEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","loadOnTransitionStart","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","spline","controlled","control","multiplier","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","click","message","notification","liveRegion","bulletEl","$bulletEl","paginationBulletMessage","onEnterKey","notificationClass","updateNavigation","updatePagination","History","pushState","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","slugify","includes","currentState","setHistory","HashNavigation","newHash","watchState","onHashCange","setHash","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","running","run","paused","waitForTransition","disableOnInteraction","pause","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","slideAngle","round","tz","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","Flip","flipEffect","limitRotation","rotateY","rotateX","zIndex","Coverflow","coverflowEffect","center","rotate","depth","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","perspectiveOrigin","Thumbs","thumbsParams","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","initial","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","swiper_esm_js_1","EffectFade","app_1","slider","ignoreWarnings","sideMenu","swiper_esm_1","EffectCube","id","targetBlock","initiallizeVariantsSlider","mainSlider","thisSlider","bindNav","plates","tableWrap","tableWrapTrack","shadows","right","track","scrollWidth","shadows_1","setShadowOpacity","swiper_1","default","660","Virtual$1","Keyboard$1","titles","getSlidesPerColumn","5000","4000","3500","3100","2600","2300","2000","1700","screenHeight","vacancyList"],"mappings":"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","file":"js/common.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n","/**\n * Dom7 2.1.3\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2019, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: February 11, 2019\n */\nimport { document, window } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function onceHandler(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, onceHandler, capture);\n    if (onceHandler.dom7proxy) {\n      delete onceHandler.dom7proxy;\n    }\n  }\n  onceHandler.dom7proxy = listener;\n  return dom.on(eventName, targetSelector, onceHandler, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n// eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n","class App {\r\n\t/**\r\n\t * documentReady\r\n\t * @param {any} callback [description]\r\n\t */\r\n\tpublic static domReady(callback: any): void {\r\n\t\ttry{\r\n\t\t\tdocument.addEventListener(\"DOMContentLoaded\", callback)\r\n\t\t}catch(e){\r\n\t\t\tthrow Error(e)\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static getElements(selector: string): NodeList{\r\n\t\tconst elements: any = document.querySelectorAll(selector);\r\n\r\n\t\treturn elements.length ? elements : []\r\n\t\t// return this.elementsGetter(sele ctor)\r\n\t}\r\n\r\n\t/**\r\n\t* Метод получения одного объекта по селектору\r\n\t* @param selector: string\r\n\t* @return HTMLElement\r\n\t*/\r\n\tpublic static getElement(selector: string): HTMLElement{\r\n\t\tconst element: any = document.querySelector(selector);\r\n\r\n\t\treturn element\r\n\t}\r\n\r\n\tpublic static elementsGetter(selector: string): HTMLElement[]{\r\n\t\treturn App.transformNodeListToArray(document.querySelectorAll(selector))\r\n\t}\r\n\r\n\tpublic static transformNodeListToArray(list: NodeList): HTMLElement[]{\r\n\t\ttry{\r\n\t\t\treturn Array.prototype.slice.call(list)\r\n\t\t}catch(e){\r\n\t\t\tthrow Error(e)\r\n\t\t\treturn []\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static wrap(selector: any, wrapper: HTMLElement): void\r\n\tpublic static wrap(selector: any, wrapper: string): void\r\n\tpublic static wrap(selector: any, wrapper: any): void{\r\n\t\tlet localWrapper: HTMLElement;\r\n\r\n\t\tif (typeof wrapper == \"string\")\r\n\t\t\tlocalWrapper = document.createElement(wrapper)\r\n\t\telse if (wrapper instanceof HTMLElement)\r\n\t\t\tlocalWrapper = wrapper\r\n\r\n\t\t// console.log(selector, [localWrapper])\r\n\r\n\t\tApp.each(selector, function(el: HTMLElement, i:number){\r\n\t\t\tlocalWrapper.innerHTML = el.outerHTML\r\n\r\n\t\t\tel.parentNode.replaceChild(localWrapper, el)\r\n\t\t})\r\n\t}\r\n\r\n\tpublic static each(elements: string, callback: any): void\r\n\tpublic static each(elements: HTMLElement[], callback: any): void\r\n\tpublic static each(elements: NodeList, callback: any): void\r\n\tpublic static each(elements: any, callback: any): void{\r\n\r\n\t\tif (!callback){\r\n\t\t\tconsole.error(\"Callback does not exists in yours 'each'\")\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (typeof elements == \"string\")\r\n\t\t\telements = App.transformNodeListToArray(App.getElements(elements))\r\n\r\n\t\tlet i = 0;\r\n\r\n\t\tfor (let el of elements){\r\n\t\t\tcallback(el, i)\r\n\t\t\ti++\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass Element {\r\n\t// private _selector: string\r\n\tprotected _els: HTMLElement[]\r\n\tpublic _length: number = 0\r\n\r\n\tset els(elements: HTMLElement[]){\r\n\t\tthis._els = elements\r\n\r\n\t\tthis._length = elements.length || 0\r\n\t}\r\n\r\n\tget els(){\r\n\t\treturn this._els\r\n\t}\r\n\r\n\tget length(){\r\n\t\treturn this._length\r\n\t}\r\n\r\n\t/**\r\n\t* Создание коллекции элементов\r\n\t* @param selector: HTMLElement[] || NodeList || HTMLElement || Element || string\r\n\t* @return Element\r\n\t*/  \r\n\tconstructor (selector?: HTMLElement[])\r\n\tconstructor (selector?: HTMLElement[])\r\n\tconstructor (selector?: NodeList)\r\n\tconstructor (selector?: Element)\r\n\tconstructor (selector?: string)\r\n\tconstructor (selector?: HTMLElement)\r\n\tconstructor (selector?: any){\r\n\r\n\t\tif (!selector)\r\n\t\t\tthis.els = []\r\n\t\telse if (typeof selector == \"string\")\r\n\t\t\tthis.els = App.elementsGetter(selector)\r\n\t\telse if (selector instanceof HTMLElement)\r\n\t\t\tthis.els = [selector]\r\n\t\telse if (selector instanceof NodeList)\r\n\t\t\tthis.els = App.transformNodeListToArray(selector)\r\n\t\telse if (selector instanceof Array && (selector[0] instanceof HTMLElement || !selector.length))\r\n\t\t\tthis.els = selector\r\n\t\telse if (selector instanceof Element)\r\n\t\t\tthis.els = selector.els\r\n\t\telse\r\n\t\t\tthrow Error(`Invalid selector: ${selector}`)\r\n\t}\r\n\r\n\t/**\r\n\t * Метод добавление HTMLElemnt в экземпляр\r\n\t * класса Element\r\n\t * @param element: HTMLElement || NodeList || string || Element\r\n\t * @return Element\r\n\t */\r\n\tpublic addElement(element: Element): Element\r\n\tpublic addElement(element: NodeList): Element\r\n\tpublic addElement(element: string): Element\r\n\tpublic addElement(element: HTMLElement): Element\r\n\tpublic addElement(element: HTMLElement[]): Element\r\n\tpublic addElement(element: any): Element{\r\n\r\n\t\tif (typeof element == \"string\")\r\n\t\t\tthis.els = this.els.concat(App.elementsGetter(element))\r\n\t\telse if (element instanceof Element)\r\n\t\t\tthis.els = this.els.concat(element.els)\r\n\t\telse if (element instanceof HTMLElement)\r\n\t\t\tthis.els = this.els.concat(element)\r\n\t\telse if (element instanceof NodeList)\r\n\t\t\tthis.els = this.els.concat(App.transformNodeListToArray(element))\r\n\t\telse if (element instanceof Array && (element[0] instanceof HTMLElement || !element.length))\r\n\t\t\tthis.els = this.els.concat(element)\r\n\t\telse\r\n\t\t\tthrow Error(`Invalid selector: ${element}`)\r\n\t\treturn this\r\n\t}\r\n\r\n\r\n\t/** \r\n\t* Метод сравнения элементов\r\n\t* @param selector: HTMLElement || string\r\n\t* @return boolean\r\n\t*/\r\n\tpublic is(selector: HTMLElement): boolean\r\n\tpublic is(selector: string): boolean\r\n\tpublic is(selector: any): boolean{\r\n\t\tlet element: HTMLElement[];\r\n\r\n\t\tif (typeof selector == \"string\")\r\n\t\t\telement = App.elementsGetter(selector)\r\n\t\telse if (selector instanceof HTMLElement)\r\n\t\t\telement = [selector]\r\n\r\n\t\treturn this.els[0] == element[0]\r\n\t}\r\n\r\n\t/** Метод проверки содержания текущими элементами передаваемых\r\n\t* @param selector: Element || HTMLElement || HTMLElement[] || NodeList || string\r\n\t* @return boolean\r\n\t*/\r\n\tpublic has(selector: Element): boolean\r\n\tpublic has(selector: HTMLElement): boolean\r\n\tpublic has(selector: HTMLElement[]): boolean\r\n\tpublic has(selector: NodeList): boolean\r\n\tpublic has(selector: string): boolean\r\n\tpublic has(selector: any): boolean{\r\n\t\tlet searchElements: HTMLElement[];\r\n\r\n\t\tif (typeof selector == \"string\")\r\n\t\t\tsearchElements = App.elementsGetter(selector)\r\n\t\telse if (selector instanceof HTMLElement)\r\n\t\t\tsearchElements = [selector]\r\n\t\telse if (selector instanceof Element)\r\n\t\t\tsearchElements = selector._els\r\n\t\telse if (selector instanceof NodeList)\r\n\t\t\tsearchElements = App.transformNodeListToArray(selector)\r\n\t\telse if (selector instanceof Array && (selector[0] instanceof HTMLElement || !selector.length))\r\n\t\t\tsearchElements = selector\r\n\t\telse\r\n\t\t\tthrow Error(`Invalid selector: ${selector}`)\r\n\r\n\t\tlet isFinded: boolean = false;\r\n\r\n\t\tfor (let el of this.els){\r\n\r\n\t\t\tfor (let target of searchElements)\r\n\t\t\t\tif (el.contains(target)){\r\n\t\t\t\t\tisFinded = true\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\r\n\t\t\tif (isFinded)\r\n\t\t\t\treturn true\r\n\t\t}\r\n\r\n\t\treturn false\r\n\t}\r\n\r\n\t/**\r\n\t* Назначить класс всем текущим элементам\r\n\t* @param className: string\r\n\t* @return Element\r\n\t*/\r\n\tpublic addClass(className: string): Element{\r\n\t\tApp.each(this.els, (el: HTMLElement) => {\r\n\t\t\tel.classList.add(className)\r\n\t\t})\r\n\t\treturn this\r\n\t}\r\n\r\n\t/**\r\n\t* Удалить класс у всех текущих элементов\r\n\t* @param className: string\r\n\t* @return Element\r\n\t*/\r\n\tpublic removeClass(className: string): Element{\r\n\t\tApp.each(this.els, (el: HTMLElement) => {\r\n\t\t\tel.classList.remove(className)\r\n\t\t})\r\n\t\treturn this\r\n\t}\r\n\r\n\t/**\r\n\t* Переключения класса у всех текущих элементов\r\n\t* @param className: string\r\n\t* @return Element\r\n\t*/\r\n\tpublic toggleClass(className: string, callback: Function = () => {}): Element{\r\n\t\tApp.each(this.els, (el: HTMLElement) => {\r\n\t\t\tif (el.classList.contains(className)){\r\n\t\t\t\tel.classList.remove(className)\r\n\r\n\t\t\t\tcallback(false)\r\n\t\t\t}else{\r\n\t\t\t\tel.classList.add(className)\r\n\t\t\t\tcallback(true)\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn this\r\n\t}\r\n\r\n\tpublic hasClass(targetClass: string): boolean{\r\n\t\tfor (const el of this.els)\r\n\t\t\tif (el.classList.contains(targetClass))\r\n\t\t\t\treturn true\r\n\r\n\t\treturn false\r\n\t}\r\n\r\n\t/** Метод поиска потомков элемента по селектору \r\n\t* @param selector: string - селектор искомого\r\n\t* @return Element\r\n\t* */\r\n\tpublic find(selector: string): Element{\r\n\t\tlet searchingElements = new Array();\r\n\r\n\t\tApp.each(this.els, (el: HTMLElement) => {\r\n\t\t\tconst findedElements: NodeList = el.querySelectorAll(selector);\r\n\r\n\t\t\tif (!findedElements.length)\r\n\t\t\t\treturn\r\n\r\n\t\t\tfor (const el of App.transformNodeListToArray(findedElements))\r\n\t\t\t\tsearchingElements.push(el)\r\n\r\n\t\t\t// searchingElements.concat(App.transformNodeListToArray(findedElements))\r\n\r\n\t\t\t// console.log(searchingElements instanceof Array, App.transformNodeListToArray(findedElements) instanceof Array)\r\n\t\t})\r\n\r\n\t\treturn new Element(searchingElements)\r\n\t}\r\n\r\n\t/** Метод поиска родителей по селектору \r\n\t* @param selector: string\r\n\t* @return Element \r\n\t*/\r\n\tpublic closest(selector: string): Element{\r\n\t\tconst searchingElements = new Element();\r\n\r\n\t\tApp.each(this.els, (el: HTMLElement) => {\r\n\t\t\tconst findedElements: any = el.closest(selector);\r\n\r\n\t\t\tif (!findedElements)\r\n\t\t\t\treturn\r\n\r\n\t\t\tsearchingElements.addElement(findedElements);\r\n\t\t})\r\n\r\n\t\treturn searchingElements\r\n\t}\r\n}\r\n\r\ninterface EventOtions{\r\n\tcapture?: boolean,\r\n\tonce?: boolean,\r\n\tpassive?: boolean\r\n}\r\n\r\nclass EventListener extends Element{\r\n\r\n\t/** \r\n\t* Метод для подписки на событие\r\n\t* @param event: string - название js события\r\n\t* @param callback: function\r\n\t* @param options: object\r\n\t* @retrun EventListener\r\n\t*/\r\n\tpublic add(event: string, callback: any, options?: EventOtions): EventListener{\r\n\r\n\t\tApp.each(this.els, function(el:HTMLElement, i: number){\r\n\t\t\tel.addEventListener(event, function(event){\r\n\t\t\t\tcallback(this, event, i)\r\n\t\t\t}, options)\r\n\t\t})\r\n\r\n\t\treturn this\r\n\t}\r\n\r\n\t/** \r\n\t* Метод для вызова события\r\n\t* @param event: string - название js события\r\n\t* @retrun EventListener\r\n\t*/\r\n\tpublic trigger(event: string): EventListener{\r\n\t\tApp.each(this.els, function(el: HTMLElement){\r\n\t\t\tlet evt: Event = document.createEvent(\"HTMLEvents\");\r\n\r\n\t\t\tevt.initEvent(event, false, true)\r\n\t\t\tel.dispatchEvent(evt)\r\n\t\t})\r\n\r\n\t\treturn this\r\n\t}\r\n}\r\n\r\ninterface mobileMenuSettings {\r\n\tburger: string,\r\n\tmenu: string,\r\n\tmenuActiveClass: string,\r\n\tbodyActiveClass: string,\r\n\tignoreWarnings: boolean,\r\n\tfixBody: boolean,\r\n\tmedia?: string,\r\n}\r\n\r\nclass mobileMenu{\r\n\tprivate _settings: mobileMenuSettings\r\n\tprivate _burger: HTMLElement\r\n\tprivate _menu: HTMLElement\r\n\tprivate _state: boolean = false\r\n\tprivate _error: boolean = false\r\n\tprivate menuActiveClass: string = \"js__opened\"\r\n\tprivate bodyActiveClass: string = \"js__menu-opened\"\r\n\tprivate body: HTMLElement = App.getElement(\"body\")\r\n\r\n\tset error(text: string){\r\n\t\tthis._error = true\r\n\r\n\t\tconsole.error(`${text}. Меню не работает`)\r\n\t}\r\n\r\n\tset state(newState: boolean){\r\n\t\tthis._state = newState\r\n\t}\r\n\r\n\r\n\tset menu (el: HTMLElement){\r\n\t\tif (!(el instanceof HTMLElement))\r\n\t\t\tthis.error = \"Меню не найдено\"\r\n\t\telse\r\n\t\t\tthis._menu = el\r\n\t}\r\n\r\n\tset burger(el: HTMLElement){\r\n\t\tif (!(el instanceof HTMLElement))\r\n\t\t\tthis.error = \"Бургер не найден\"\r\n\t\telse\r\n\t\t\tthis._burger = el\r\n\t}\r\n\r\n\tget burger(){\r\n\t\treturn this._burger\r\n\t}\r\n\r\n\tget menu(){\r\n\t\treturn this._menu\r\n\t}\r\n\r\n\tget settings(){\r\n\t\treturn this._settings\r\n\t}\r\n\r\n\tget state(){\r\n\t\treturn this._state\r\n\t}\r\n\r\n\tconstructor(settings: mobileMenuSettings){\r\n\t\tthis._settings = settings\r\n\t\tthis.burger = App.getElement(settings.burger)\r\n\r\n\t\tthis.menu = App.getElement(settings.menu)\r\n\r\n\t\tthis.bindEvents()\r\n\t}\r\n\r\n\tpublic openMenu(): mobileMenu{\r\n\t\tif (!window.matchMedia(this.settings.media).matches)\r\n\t\t\treturn\r\n\r\n\t\tif (this.settings.fixBody){\r\n\t\t\tthis.body.style.top = -window.pageYOffset + \"px\";\r\n\t\t\tthis.body.style.position = \"fixed\";\r\n\t\t}\r\n\r\n\t\tthis.burger.classList.add(\"js__active\")\r\n\t\tthis.menu.classList.add(this.menuActiveClass)\r\n\t\tthis.body.classList.add(this.bodyActiveClass)\r\n\r\n\t\tthis.state = true\r\n\r\n\t\treturn this\r\n\t}\r\n\r\n\tpublic closeMenu(): mobileMenu{\r\n\t\tif (!window.matchMedia(this.settings.media).matches || !this.state)\r\n\t\t\treturn\r\n\r\n\t\tlet top: number = 0;\r\n\r\n\t\tif (this.settings.fixBody){\r\n\t\t\ttop = Math.abs(parseInt(this.body.style.top))\r\n\r\n\t\t\tthis.body.style.top = \"\"\r\n\t\t\tthis.body.style.position = \"\"\r\n\t\t}\r\n\r\n\t\tthis.burger.classList.remove(\"js__active\")\r\n\t\tthis.menu.classList.remove(this.menuActiveClass)\r\n\t\tthis.body.classList.remove(this.bodyActiveClass)\r\n\r\n\t\tif (this.settings.fixBody)\r\n\t\t\twindow.scrollTo(0, top)\r\n\r\n\t\tthis.state = false\r\n\r\n\t\treturn this\r\n\t}\r\n\r\n\tpublic toggleMenu(): mobileMenu{\r\n\t\tif (!window.matchMedia(this.settings.media).matches)\r\n\t\t\treturn\r\n\r\n\t\tif (this.state)\r\n\t\t\tthis.closeMenu()\r\n\t\telse\r\n\t\t\tthis.openMenu()\r\n\r\n\t\treturn this\r\n\t}\r\n\r\n\tprivate bindEvents(){\r\n\t\tdocument.addEventListener(\"click\", (event: any) => {\r\n\t\t\tconst target: Element = new Element(event.target);\r\n\t\t\t\r\n\t\t\tif(!target.is(this.burger)\r\n\t\t\t\t&& !new Element(this.burger).has(target)\r\n\t\t\t\t&& !target.is(this.menu)\r\n\t\t\t\t&& !new Element(this.menu).has(target))\r\n\t\t\t\tthis.closeMenu()\r\n\t\t})\r\n\r\n\t\tnew EventListener(this.burger).add(\"click\", (el: HTMLElement) => {\r\n\t\t\tthis.toggleMenu()\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport {App, EventListener, mobileMenu as MobileMenu, Element}","/**\n * Swiper 4.5.0\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2019 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: February 22, 2019\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition as transition$1, on, off, trigger, transitionEnd as transitionEnd$1, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition: transition$1,\n  on,\n  off,\n  trigger,\n  transitionEnd: transitionEnd$1,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter(paramsPart => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = document.createElement('div');\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!((window.navigator.maxTouchPoints > 0) || ('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(window.navigator.pointerEnabled || window.PointerEvent || ('maxTouchPoints' in window.navigator && window.navigator.maxTouchPoints > 0)),\n    prefixedPointerEvents: !!window.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (window.Modernizr && window.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles.length; i += 1) {\n        if (styles[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!window.navigator.userAgent.match(/Trident/g) || !!window.navigator.userAgent.match(/MSIE/g),\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n      if (onceHandler.f7proxy) {\n        delete onceHandler.f7proxy;\n      }\n    }\n    onceHandler.f7proxy = handler;\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || (eventHandler.f7proxy && eventHandler.f7proxy === handler)) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(m => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          const width = parseFloat(slideStyles.getPropertyValue('width'));\n          const paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n          const paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n          const marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n          const marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n          }\n        } else {\n          const height = parseFloat(slideStyles.getPropertyValue('height'));\n          const paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n          const paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n          const marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n          const marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = height + marginTop + marginBottom;\n          } else {\n            slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n          }\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index = swiper.activeIndex + i;\n      if (index > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                || (slideAfter > 0 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  swiper.emit('slideChange');\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition = {\n  setTransition,\n  transitionStart,\n  transitionEnd,\n};\n\nfunction slideTo (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map(val => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const snapIndex = Math.floor(index / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index, el) => {\n    const slide = $(el);\n    if (index < swiper.loopedSlides) appendSlides.push(el);\n    if (index < slides.length && index >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: window.cordova || window.phonegap,\n    phonegap: window.cordova || window.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi = !device.webView\n      && (ipod || iphone)\n      && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n      && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data.isTouchEvent = e.type === 'touchstart';\n  if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data.formElements)) preventDefault = false;\n    if (\n      document.activeElement\n      && $(document.activeElement).is(data.formElements)\n      && document.activeElement !== e.target\n    ) {\n      document.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data.formElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data.currentTranslate = diff + data.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime,\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) > 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      data.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach((param) => {\n        const paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n\n    Utils.extend(swiper.params, breakpointParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  const swiper = this;\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (swiper.params.breakpointsInverse) {\n      if (point <= window.innerWidth) {\n        breakpoint = point;\n      }\n    } else if (point >= window.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push('initialized');\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsInverse: false,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\n/* eslint no-param-reassign: \"off\" */\n\nconst prototypes = {\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if ((newDirection === currentDirection) || (newDirection !== 'horizontal' && newDirection !== 'vertical')) {\n      return swiper;\n    }\n\n    if (currentDirection === 'vertical') {\n      swiper.$el\n        .removeClass(`${swiper.params.containerModifierClass}vertical wp8-vertical`)\n        .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n      if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n      }\n    }\n    if (currentDirection === 'horizontal') {\n      swiper.$el\n        .removeClass(`${swiper.params.containerModifierClass}horizontal wp8-horizontal`)\n        .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n      if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n      }\n    }\n\n    swiper.params.direction = newDirection;\n\n    swiper.slides.each((slideIndex, slideEl) => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n\n    return swiper;\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index], index));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach((index) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\n    onRendered();\n  },\n  renderSlide(slide, index) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n    if (params.cache) swiper.virtual.cache[index] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slides) {\n    const swiper = this;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    swiper.virtual.update(true);\n  },\n  prependSlide(slides) {\n    const swiper = this;\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  },\n  removeSlide(slidesIndexes) {\n    const swiper = this;\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(activeIndex, 0);\n  },\n  removeAllSlides() {\n    const swiper = this;\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(0, 0);\n  },\n};\n\nvar virtual = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        removeSlide: Virtual.removeSlide.bind(swiper),\n        removeAllSlides: Virtual.removeAllSlides.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      if (!swiper.params.initialSlide) {\n        swiper.virtual.update();\n      }\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if ((kc === 39 && !rtl) || (kc === 37 && rtl)) swiper.slideNext();\n      if ((kc === 37 && !rtl) || (kc === 39 && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 40) swiper.slideNext();\n      if (kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar keyboard = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document.implementation\n    && document.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = data.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = data.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      if (swiper.params.loop) {\n        swiper.loopFix();\n      }\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar mousewheel = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  onPrevClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  },\n  onNextClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', swiper.navigation.onNextClick);\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', swiper.navigation.onPrevClick);\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', swiper.navigation.onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', swiper.navigation.onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar navigation = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n        onNextClick: Navigation.onNextClick.bind(swiper),\n        onPrevClick: Navigation.onPrevClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        let isHidden;\n        if ($nextEl) {\n          isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n        } else if ($prevEl) {\n          isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n        }\n        if (isHidden === true) {\n          swiper.emit('navigationShow', swiper);\n        } else {\n          swiper.emit('navigationHide', swiper);\n        }\n        if ($nextEl) {\n          $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n        if ($prevEl) {\n          $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index += swiper.loopedSlides;\n        swiper.slideTo(index);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar pagination = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        const isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n        if (isHidden === true) {\n          swiper.emit('paginationShow', swiper);\n        } else {\n          swiper.emit('paginationHide', swiper);\n        }\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const { $el, dragSize, trackSize } = scrollbar;\n\n    let pointerPosition;\n    if (swiper.isHorizontal()) {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    } else {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n    }\n    let positionRatio;\n    positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar scrollbar = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each((index, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar parallax = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar zoom = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n\n    let scale = 1;\n    Object.defineProperty(swiper.zoom, 'scale', {\n      get() {\n        return scale;\n      },\n      set(value) {\n        if (scale !== value) {\n          const imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n          const slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n          swiper.emit('zoomChange', value, imageEl, slideEl);\n        }\n        scale = value;\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index}\"]`)\n      : swiper.slides.eq(index);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar lazy = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar controller = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar a11y$1 = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text) {\n    return text.toString()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar history = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar hashNavigation = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar autoplay = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset = $slideEl[0].swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar effectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar effectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar effectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar effectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = currentThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n      } else {\n        newThumbsIndex = swiper.realIndex;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar thumbs = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      swiper: null,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  \n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport { Swiper, virtual as Virtual, keyboard as Keyboard, mousewheel as Mousewheel, navigation as Navigation, pagination as Pagination, scrollbar as Scrollbar, parallax as Parallax, zoom as Zoom, lazy as Lazy, controller as Controller, a11y$1 as A11y, history as History, hashNavigation as HashNavigation, autoplay as Autoplay, effectFade as EffectFade, effectCube as EffectCube, effectFlip as EffectFlip, effectCoverflow as EffectCoverflow, thumbs as Thumbs };\n","import {Swiper, Lazy, EffectFade, Navigation} from 'swiper/dist/js/swiper.esm.js'\r\nimport {App} from \"./app\"\r\n\r\nSwiper.use([Lazy, EffectFade, Navigation])\r\n\r\nApp.domReady(() => {\r\n\tApp.each(\".main-reviews\", function(el: HTMLElement){\r\n\t\tconst prevEl: HTMLElement = el.querySelector(\".swiper-button-prev\"),\r\n\t\t\tnextEl: HTMLElement = el.querySelector(\".swiper-button-next\"),\r\n\t\t\tslider: HTMLElement = el.querySelector(\".reviews-slider\");\r\n\r\n\t\tnew Swiper(slider, {\r\n\t\t\teffect: \"fade\",\r\n\t\t\tnavigation: {\r\n\t\t\t\tprevEl: prevEl,\r\n\t\t\t\tnextEl: nextEl\r\n\t\t\t},\r\n\t\t\tlazy: {\r\n\t\t\t\tloadPrevNext: true,\r\n\t\t\t\tloadPrevNextAmount: 3,\r\n\t\t\t\tloadOnTransitionStart: true\r\n\t\t\t},\r\n\t\t})\r\n\t})\r\n})","import \"./tovar\"\r\nimport \"./timeline\"\r\nimport \"./standart-page\"\r\nimport \"./useful\"\r\nimport \"./addresses\"\r\nimport \"./partners\"\r\nimport \"./career\"\r\nimport {App, Element, MobileMenu, EventListener} from \"./app\"\r\n\r\nconst adaptiveMedia = \"(max-width: 1200px)\";\r\n\r\nApp.domReady(() => {\r\n\tnew MobileMenu({\r\n\t\tburger: \".head__burger\",\r\n\t\tmenu: \".side-menu\",\r\n\t\tmenuActiveClass: \"js__opened\",\r\n\t\tbodyActiveClass: \"js__menu__opened\",\r\n\t\tignoreWarnings: false,\r\n\t\tfixBody: true,\r\n\t\tmedia: adaptiveMedia\r\n\t})\r\n\r\n\tconst sideMenu = new Element(\".side-menu\");\r\n\r\n\tnew EventListener(\".h-menu__item--have-sub > a\").add(\"click\", (el: HTMLElement, event: Event) => {\r\n\t\tif (!window.matchMedia(adaptiveMedia).matches)\r\n\t\t\treturn\r\n\r\n\t\tconst parentEl = new Element(el).closest(\".h-menu__item--have-sub\").addClass(\"js__submenu-opened\")\r\n\t\tsideMenu.addClass(\"js__submenu-opened\")\r\n\r\n\t\tevent.preventDefault()\r\n\t})\r\n\r\n\tnew EventListener(\".h-submenu__close\").add(\"click\", (el: HTMLElement, event: Event) => {\r\n\t\tif (!window.matchMedia(adaptiveMedia).matches)\r\n\t\t\treturn\r\n\t\t\r\n\t\tconst parentEl = new Element(el).closest(\".h-menu__item--have-sub\").removeClass(\"js__submenu-opened\")\r\n\t\tsideMenu.removeClass(\"js__submenu-opened\")\r\n\r\n\t\tevent.preventDefault()\r\n\t})\r\n})","import {App, Element, EventListener} from \"./app\"\r\nimport \"./main-reviews\"\r\nimport {Swiper, Lazy, EffectFade, EffectCube, Keyboard} from \"swiper/dist/js/swiper.esm\"\r\n\r\nSwiper.use([Lazy, EffectFade, EffectCube, Keyboard])\r\n\r\nApp.domReady(() => {\r\n\t/** Переключение табов */\r\n\tnew EventListener(\".tovar-tabs__tab\").add(\"click\", (el: HTMLElement, event: Event) => {\r\n\t\tconst id = el.getAttribute(\"href\").replace(\"#\", \"\"),\r\n\t\t\ttargetBlock = new Element(`#${id}`);\r\n\r\n\t\tnew Element(\".variants-list.active, .tovar-tabs__tab.active\").removeClass(\"active\")\r\n\r\n\t\tnew Element(el).addClass(\"active\")\r\n\r\n\t\ttargetBlock.addClass(\"active\")\r\n\r\n\t\tinitiallizeVariantsSlider(document.querySelector(\".variants-list.active .variants-slider:not(.swiper-container-initialized)\"))\r\n\r\n\t\tevent.preventDefault()\r\n\t})\r\n\r\n\t/* Первоначальная инициализация активного слайдера */\r\n\tinitiallizeVariantsSlider(document.querySelector(\".variants-list.active .variants-slider:not(.swiper-container-initialized)\"))\r\n})\r\n\r\nApp.domReady(() => {\r\n\t/** Инициализация верхнего слайдера в карточке */\r\n\tconst mainSlider = new Swiper(\".tovar-sliders__big\", {\r\n\t\teffect: \"fade\",\r\n\t\tlazy: {\r\n\t\t\tloadPrevNext: true,\r\n\t\t},\r\n\t\tkeyboard: {\r\n\t\t\tenabled: true,\r\n\t\t\tonlyInViewport: true,\r\n\t\t}\r\n\t})\r\n\r\n\tnew EventListener(\".thumbs-slider__slide\").add(\"click\", (el: HTMLElement, event: Event, i: number) => {\r\n\t\tmainSlider.slideTo(i)\r\n\t})\r\n})\r\n\r\n/** Инициализация слайдеров */\r\nconst initiallizeVariantsSlider = (slider: HTMLElement) => {\r\n\tif (!slider)\r\n\t\treturn\r\n\r\n\tconst thisSlider = new Swiper(slider, {\r\n\t\teffect: \"cube\",\r\n\t\tcubeEffect: {\r\n\t\t    slideShadows: false,\r\n\t\t},\r\n\t\tlazy: {\r\n\t\t\tloadPrevNext: true,\r\n\t\t\tloadPrevNextAmount: 2\r\n\t\t},\r\n\t})\r\n\r\n\tbindNav(thisSlider, slider.closest(\".variants-list\"))\r\n}, bindNav = (slider: Swiper, el: any) => {\r\n\tconst plates = new Element(el).find(\".variants-plates__one\");\r\n\r\n\tif (!plates.length)\r\n\t\treturn\r\n\r\n\tnew EventListener(plates).add(\"click\", (el: HTMLElement, event: any, i: number) => {\r\n\t\tplates.removeClass(\"active\")\r\n\t\tel.classList.add(\"active\")\r\n\t\tslider.slideTo(i)\r\n\t}) \r\n};","import {App, Element} from \"./app\"\r\n\r\nApp.domReady(() => {\r\n\t;(function(){\r\n\t\tApp.each(\".time-line__item\", (el: HTMLElement, i: number) => {\r\n\t\t\tif (i > 1)\r\n\t\t\t\tel.style.opacity = (1 / i).toString()\r\n\t\t})\r\n\t})()\r\n})","import {App, EventListener} from \"./app\"\r\nimport Swiper from \"swiper\"\r\n\r\ninterface Shadows {\r\n\tright: HTMLElement,\r\n\tleft?: HTMLElement\r\n}\r\n\r\nApp.domReady(() => {\r\n\tconst tableWrap: HTMLElement = document.createElement(\"div\"),\r\n\t\ttableWrapTrack: HTMLElement = document.createElement(\"div\"),\r\n\t\tshadows: Shadows = {\r\n\t\t\tright: document.createElement(\"div\"),\r\n\t\t\tleft: document.createElement(\"div\"),\r\n\t\t};\r\n\r\n\tshadows.right.classList.add(\"table-wrap__shadow\")\r\n\tshadows.right.classList.add(\"table-wrap__shadow--right\")\t\r\n\r\n\tshadows.left.classList.add(\"table-wrap__shadow\")\r\n\tshadows.left.classList.add(\"table-wrap__shadow--left\")\r\n\r\n\ttableWrap.classList.add(\"table-wrap\");\r\n\ttableWrapTrack.classList.add(\"table-wrap__track\");\r\n\r\n\tApp.wrap(\".text-page > table\", tableWrapTrack)\r\n\tApp.wrap(\".table-wrap__track\", tableWrap)\r\n\r\n\tApp.each(\".table-wrap\", (el: HTMLElement) => {\r\n\t\tel.insertBefore(shadows.left, el.querySelector(\"*:first-child\"))\r\n\t\tel.insertBefore(shadows.right, null)\r\n\t})\r\n\r\n\tApp.each(\".table-wrap__track\", function(track: HTMLElement){\r\n\t\tif (track.scrollWidth > track.clientWidth){\r\n\t\t\tlet wrap = track.closest(\".table-wrap\");\r\n\r\n\t\t\tlet shadows: Shadows = {\r\n\t\t\t\tright: wrap.querySelector(\".table-wrap__shadow--right\")\r\n\t\t\t};\r\n\r\n\t\t\tsetShadowOpacity(shadows.right, track.scrollWidth - track.clientWidth)\r\n\t\t}\r\n\r\n\t\tnew EventListener(track).add(\"scroll\", function(el: HTMLElement){\r\n\t\t\tlet wrap = el.closest(\".table-wrap\");\r\n\r\n\t\t\tlet shadows: Shadows = {\r\n\t\t\t\tleft: wrap.querySelector(\".table-wrap__shadow--left\"),\r\n\t\t\t\tright: wrap.querySelector(\".table-wrap__shadow--right\")\r\n\t\t\t};\r\n\r\n\t\t\tsetShadowOpacity(shadows.right, el.scrollWidth - el.clientWidth - el.scrollLeft)\r\n\t\t\tsetShadowOpacity(shadows.left, el.scrollLeft)\r\n\t\t})\r\n\t})\r\n\r\n})\r\n\r\nApp.domReady(() => {\r\n\tApp.each(\".standart-slider\", function(el:HTMLElement){\r\n\t\tlet prevEl: HTMLElement = el.querySelector(\".swiper-button-prev\"),\r\n\t\t\tnextEl: HTMLElement = el.querySelector(\".swiper-button-next\"),\r\n\t\t\tpagination: HTMLElement = el.querySelector(\".swiper-pagination\");\r\n\r\n\t\tnew Swiper(el, {\r\n\t\t\tloop: true,\r\n\t\t\ta11y: false,\r\n\t\t\tlazy: {\r\n\t\t\t\tloadPrevNext: true,\r\n\t\t\t\tloadOnTransitionStart: true,\r\n\t\t\t\tloadPrevNextAmount: 3\r\n\t\t\t},\r\n\t\t\tnavigation: {\r\n\t\t\t\tprevEl: prevEl,\r\n\t\t\t\tnextEl: nextEl\r\n\t\t\t},\r\n\t\t\tbreakpoints: {\r\n\t\t\t\t660: {\r\n\t\t\t\t\tnavigation: {},\r\n\t\t\t\t\tpagination: {\r\n\t\t\t\t\t\tel: pagination,\r\n\t\t\t\t\t\ttype: \"bullets\",\r\n\t\t\t\t\t\tdynamicBullets: true,\r\n\t\t\t\t\t\tdynamicMainBullets: 3\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t})\r\n})\r\n\r\nconst setShadowOpacity = (element:HTMLElement, scrollWidth: number, offsetWidth: number = 80) => {\r\n\telement.style.opacity = (scrollWidth / offsetWidth <= 1 ? scrollWidth / offsetWidth : 1).toString()\r\n}","/**\n * Swiper 4.5.0\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2019 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: February 22, 2019\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition as transition$1, on, off, trigger, transitionEnd as transitionEnd$1, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition: transition$1,\n  on,\n  off,\n  trigger,\n  transitionEnd: transitionEnd$1,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter(paramsPart => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = document.createElement('div');\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!((window.navigator.maxTouchPoints > 0) || ('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(window.navigator.pointerEnabled || window.PointerEvent || ('maxTouchPoints' in window.navigator && window.navigator.maxTouchPoints > 0)),\n    prefixedPointerEvents: !!window.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (window.Modernizr && window.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles.length; i += 1) {\n        if (styles[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!window.navigator.userAgent.match(/Trident/g) || !!window.navigator.userAgent.match(/MSIE/g),\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n      if (onceHandler.f7proxy) {\n        delete onceHandler.f7proxy;\n      }\n    }\n    onceHandler.f7proxy = handler;\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || (eventHandler.f7proxy && eventHandler.f7proxy === handler)) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(m => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          const width = parseFloat(slideStyles.getPropertyValue('width'));\n          const paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n          const paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n          const marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n          const marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n          }\n        } else {\n          const height = parseFloat(slideStyles.getPropertyValue('height'));\n          const paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n          const paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n          const marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n          const marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = height + marginTop + marginBottom;\n          } else {\n            slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n          }\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index = swiper.activeIndex + i;\n      if (index > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                || (slideAfter > 0 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  swiper.emit('slideChange');\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition = {\n  setTransition,\n  transitionStart,\n  transitionEnd,\n};\n\nfunction slideTo (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map(val => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const snapIndex = Math.floor(index / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index, el) => {\n    const slide = $(el);\n    if (index < swiper.loopedSlides) appendSlides.push(el);\n    if (index < slides.length && index >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: window.cordova || window.phonegap,\n    phonegap: window.cordova || window.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi = !device.webView\n      && (ipod || iphone)\n      && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n      && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data.isTouchEvent = e.type === 'touchstart';\n  if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data.formElements)) preventDefault = false;\n    if (\n      document.activeElement\n      && $(document.activeElement).is(data.formElements)\n      && document.activeElement !== e.target\n    ) {\n      document.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data.formElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data.currentTranslate = diff + data.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime,\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) > 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      data.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach((param) => {\n        const paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n\n    Utils.extend(swiper.params, breakpointParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  const swiper = this;\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (swiper.params.breakpointsInverse) {\n      if (point <= window.innerWidth) {\n        breakpoint = point;\n      }\n    } else if (point >= window.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push('initialized');\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsInverse: false,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\n/* eslint no-param-reassign: \"off\" */\n\nconst prototypes = {\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if ((newDirection === currentDirection) || (newDirection !== 'horizontal' && newDirection !== 'vertical')) {\n      return swiper;\n    }\n\n    if (currentDirection === 'vertical') {\n      swiper.$el\n        .removeClass(`${swiper.params.containerModifierClass}vertical wp8-vertical`)\n        .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n      if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n      }\n    }\n    if (currentDirection === 'horizontal') {\n      swiper.$el\n        .removeClass(`${swiper.params.containerModifierClass}horizontal wp8-horizontal`)\n        .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n      if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n      }\n    }\n\n    swiper.params.direction = newDirection;\n\n    swiper.slides.each((slideIndex, slideEl) => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n\n    return swiper;\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index], index));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach((index) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\n    onRendered();\n  },\n  renderSlide(slide, index) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n    if (params.cache) swiper.virtual.cache[index] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slides) {\n    const swiper = this;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    swiper.virtual.update(true);\n  },\n  prependSlide(slides) {\n    const swiper = this;\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  },\n  removeSlide(slidesIndexes) {\n    const swiper = this;\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(activeIndex, 0);\n  },\n  removeAllSlides() {\n    const swiper = this;\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(0, 0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        removeSlide: Virtual.removeSlide.bind(swiper),\n        removeAllSlides: Virtual.removeAllSlides.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      if (!swiper.params.initialSlide) {\n        swiper.virtual.update();\n      }\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if ((kc === 39 && !rtl) || (kc === 37 && rtl)) swiper.slideNext();\n      if ((kc === 37 && !rtl) || (kc === 39 && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 40) swiper.slideNext();\n      if (kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document.implementation\n    && document.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = data.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = data.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      if (swiper.params.loop) {\n        swiper.loopFix();\n      }\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  onPrevClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  },\n  onNextClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', swiper.navigation.onNextClick);\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', swiper.navigation.onPrevClick);\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', swiper.navigation.onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', swiper.navigation.onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n        onNextClick: Navigation.onNextClick.bind(swiper),\n        onPrevClick: Navigation.onPrevClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        let isHidden;\n        if ($nextEl) {\n          isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n        } else if ($prevEl) {\n          isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n        }\n        if (isHidden === true) {\n          swiper.emit('navigationShow', swiper);\n        } else {\n          swiper.emit('navigationHide', swiper);\n        }\n        if ($nextEl) {\n          $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n        if ($prevEl) {\n          $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index += swiper.loopedSlides;\n        swiper.slideTo(index);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        const isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n        if (isHidden === true) {\n          swiper.emit('paginationShow', swiper);\n        } else {\n          swiper.emit('paginationHide', swiper);\n        }\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const { $el, dragSize, trackSize } = scrollbar;\n\n    let pointerPosition;\n    if (swiper.isHorizontal()) {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    } else {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n    }\n    let positionRatio;\n    positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each((index, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n\n    let scale = 1;\n    Object.defineProperty(swiper.zoom, 'scale', {\n      get() {\n        return scale;\n      },\n      set(value) {\n        if (scale !== value) {\n          const imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n          const slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n          swiper.emit('zoomChange', value, imageEl, slideEl);\n        }\n        scale = value;\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index}\"]`)\n      : swiper.slides.eq(index);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text) {\n    return text.toString()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset = $slideEl[0].swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = currentThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n      } else {\n        newThumbsIndex = swiper.realIndex;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar Thumbs$1 = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      swiper: null,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow,\n  Thumbs$1\n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport default Swiper;\n","import {App, Element, EventListener} from \"./app\"\r\n\r\nApp.domReady(() => {\r\n\tconst titles = new Element(\".useful-item__title\");\r\n\r\n\tnew EventListener(titles).add(\"click\", (el: HTMLElement) => {\r\n\t\ttitles.closest(\".useful-item\").removeClass(\"active\")\r\n\r\n\t\tnew Element(el).closest(\".useful-item\").addClass(\"active\")\r\n\t})\r\n})","import {App, Element, EventListener} from \"./app\"\r\nimport {Swiper, Lazy, EffectFade} from \"swiper/dist/js/swiper.esm\"\r\n\r\nSwiper.use([Lazy, EffectFade])\r\n\r\nApp.domReady(() => {\r\n\tnew EventListener(\".gray-arrow-btn\").add(\"click\", (el: HTMLElement) => {\r\n\t\tnew Element(\".gray-arrow-btn\").closest(\".address\").removeClass(\"active\")\r\n\r\n\t\tnew Element(el).closest(\".address\").addClass(\"active\")\r\n\r\n\t\tinitiallizeVariantsSlider(el.closest(\".address\").querySelector(\".address-slider:not(.swiper-container-initialized)\"))\r\n\t})\r\n\r\n\tinitiallizeVariantsSlider(document.querySelector(\".address.active .address-slider:not(.swiper-container-initialized)\"))\r\n})\r\n\r\nconst initiallizeVariantsSlider = (slider: HTMLElement) => {\r\n\tif (!slider)\r\n\t\treturn\r\n\r\n\tnew Swiper(slider, {\r\n\t\teffect: \"fade\",\r\n\t\tcubeEffect: {\r\n\t\t    slideShadows: false,\r\n\t\t},\r\n\t\tlazy: {\r\n\t\t\tloadPrevNext: true,\r\n\t\t\tloadPrevNextAmount: 1\r\n\t\t},\r\n\t})\r\n}","import {App} from \"./app\"\r\nimport {Swiper, Lazy, Keyboard, Scrollbar} from \"swiper/dist/js/swiper.esm\"\r\n\r\nSwiper.use([Lazy, Keyboard, Scrollbar])\r\n\r\nApp.domReady(() => {\r\n\tconst partnersSlider = new Swiper(\".partners-slider\", {\r\n\t\tslidesPerColumn: getSlidesPerColumn(),\r\n\t\tslidesPerView: 3,\r\n\t\tfreeMode: true,\r\n\t\tlazy: {\r\n\t\t\tloadPrevNext: true,\r\n\t\t\tloadPrevNextAmount: 1000 //слайдер криво подгружает\r\n\t\t},\r\n\t\tkeyboard: {\r\n\t\t\tenabled: true,\r\n\t\t\tonlyInViewport: true,\r\n\t\t},\r\n\t\tscrollbar: {\r\n\t\t\tel: '.swiper-scrollbar',\r\n\t\t\tdraggable: true,\r\n\t\t},\r\n\t\tbreakpoints: {\r\n\t\t\t5000: {\r\n\t\t\t\tslidesPerView: 12\r\n\t\t\t},\r\n\t\t\t4000: {\r\n\t\t\t\tslidesPerView: 10\r\n\t\t\t},\r\n\t\t\t3500: {\r\n\t\t\t\tslidesPerView: 8\r\n\t\t\t},\r\n\t\t\t3100: {\r\n\t\t\t\tslidesPerView: 6\r\n\t\t\t},\r\n\t\t\t2600: {\r\n\t\t\t\tslidesPerView: 5\r\n\t\t\t},\r\n\t\t\t2300: {\r\n\t\t\t\tslidesPerView: 4\r\n\t\t\t},\r\n\t\t\t2000: {\r\n\t\t\t\tslidesPerView: 3\r\n\t\t\t},\r\n\t\t\t1700: {\r\n\t\t\t\tslidesPerView: 2\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\t// window.addEventListener(\"resize\", function(){\r\n\t// \tpartnersSlider\r\n\t// })\r\n})\r\n\r\nconst getSlidesPerColumn = (): number => {\r\n\tconst screenHeight = window.innerHeight;\r\n\r\n\tif (screenHeight >= 1200)\r\n\t\treturn 3\r\n\telse if (screenHeight >= 650)\r\n\t\treturn 2\r\n\telse \r\n\t\treturn 1\r\n}","import {App, Element, EventListener } from \"./app\"\r\nimport {Swiper, Lazy, Keyboard, Navigation} from \"swiper/dist/js/swiper.esm\"\r\n\r\nSwiper.use([Lazy, Keyboard, Navigation])\r\n\r\nApp.domReady(() => {\r\n\tnew Swiper(\".career-slider\", {\r\n\t\tslidesPerView: 3,\r\n\t\tloop: true,\r\n\t\tspaceBetween: 32,\r\n\t\tlazy: {\r\n\t\t\tloadPrevNext: true,\r\n\t\t\tloadPrevNextAmount: 3\r\n\t\t},\r\n\t\tkeyboard: {\r\n\t\t\tenabled: true,\r\n\t\t\tonlyInViewport: true,\r\n\t\t},\r\n\t\tnavigation: {\r\n\t\t\tnextEl: '.career-slider__arrows .swiper-button-next',\r\n\t\t\tprevEl: '.career-slider__arrows .swiper-button-prev',\r\n\t\t},\r\n\t})\r\n})\r\n\r\nApp.domReady(() => {\r\n\tconst vacancyList = new Element(\".vacancy__title\");\r\n\r\n\tnew EventListener(vacancyList).add(\"click\", (el: HTMLElement) => {\r\n\t\tvacancyList.closest(\".vacancy\").removeClass(\"js__opened\")\r\n\r\n\t\tnew Element(el).closest(\".vacancy\").addClass(\"js__opened\")\r\n\t})\r\n})"],"sourceRoot":""}